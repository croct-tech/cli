// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateLayoutComponent should correctly transform allImports.tsx: allImports.tsx 1`] = `
"import type { ReactNode, PropsWithChildren } from "react";
import type { AppProps } from "next/app";
import { CroctProvider } from "@croct/plug-next/CroctProvider";

export default function RootLayout(
  {
    children: children
  }: PropsWithChildren
): ReactNode {
  return (
    <html lang="en">
      <body>
        <CroctProvider>
          {children}
        </CroctProvider>
      </body>
    </html>
  );
}
"
`;

exports[`CreateLayoutComponent should correctly transform empty.jsx: empty.jsx 1`] = `
"import { CroctProvider } from "@croct/plug-next/CroctProvider";

export default function RootLayout(
  {
    children: children
  }
) {
  return (
    <html lang="en">
      <body>
        <CroctProvider>
          {children}
        </CroctProvider>
      </body>
    </html>
  );
}"
`;

exports[`CreateLayoutComponent should correctly transform empty.tsx: empty.tsx 1`] = `
"import { CroctProvider } from "@croct/plug-next/CroctProvider";
import type { ReactNode, PropsWithChildren } from "react";

export default function RootLayout(
  {
    children: children
  }: PropsWithChildren
): ReactNode {
  return (
    <html lang="en">
      <body>
        <CroctProvider>
          {children}
        </CroctProvider>
      </body>
    </html>
  );
}"
`;

exports[`CreateLayoutComponent should correctly transform providerImport.jsx: providerImport.jsx 1`] = `
"import { CroctProvider } from "@croct/plug-next/CroctProvider";

export default function RootLayout(
  {
    children: children
  }
) {
  return (
    <html lang="en">
      <body>
        <CroctProvider>
          {children}
        </CroctProvider>
      </body>
    </html>
  );
}
"
`;

exports[`CreateLayoutComponent should correctly transform unrelatedCode.tsx: unrelatedCode.tsx 1`] = `
"import { CroctProvider } from "@croct/plug-next/CroctProvider";
import {Fragment} from "react";

export function UnrelatedComponent() {
    return <Fragment />;
}
import type { ReactNode, PropsWithChildren } from "react";

export default function RootLayout(
    {
        children: children
    }: PropsWithChildren
): ReactNode {
    return (
        <html lang="en">
            <body>
                <CroctProvider>
                    {children}
                </CroctProvider>
            </body>
        </html>
    );
}
"
`;
